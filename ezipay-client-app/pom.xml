<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.shazwan.test</groupId>
	<artifactId>ezipay-client-app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ezipay-client-app-8080</name>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring5</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>false</fork>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Everything below here is to test this project, you wouldn't need the 
		remaining in your own project -->
	<profiles>
		<profile>
			<id>okta-tck</id>

			<properties>
				<node.version>v10.15.1</node.version>
			</properties>

			<build>
				<plugins>
					<!-- Tell failsafe to run Okta's oidc-tck -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.1</version>
						<configuration>
							<dependenciesToScan>
								<dependency>com.okta.oidc.tck:okta-oidc-tck</dependency>
							</dependenciesToScan>
							<systemPropertyVariables>
								<okta.tck.redirectOnError>true</okta.tck.redirectOnError>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.1.1</version>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>package</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<!-- extract the tck UI tests -->
										<artifactItem>
											<groupId>com.okta.oidc.tck</groupId>
											<artifactId>okta-oidc-tck</artifactId>
											<classifier>e2e</classifier>
											<type>zip</type>
											<outputDirectory>${project.build.testOutputDirectory}/</outputDirectory>
										</artifactItem>
										<!-- extract the tck keystore -->
										<artifactItem>
											<groupId>com.okta.oidc.tck</groupId>
											<artifactId>okta-oidc-tck</artifactId>
											<outputDirectory>${project.build.directory}</outputDirectory>
											<destFileName>tck-keystore.jks</destFileName>
											<includes>tck-keystore.jks</includes>
										</artifactItem>
									</artifactItems>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- use the frontend plugin to drive javascript based selenium tests -->
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.7.5</version>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
							<workingDirectory>${project.build.testOutputDirectory}</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node</id>
								<phase>verify</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
							</execution>
							<execution>
								<id>npm install</id>
								<phase>verify</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm test</id>
								<phase>verify</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>test</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
